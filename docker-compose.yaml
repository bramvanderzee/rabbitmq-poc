version: "3.2"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    restart: always
    volumes:
      - './data:/var/lib/rabbitmq/mnesia'
    ports:
      - 5672:5672
      - 15672:15672

  producer:
    build:
      context: ./producer
      dockerfile: ../Dockerfile
    volumes:
      - './producer/:/usr/src/app'
    ports:
      - 3000:3000
    depends_on:
      - rabbitmq
    restart: always

  consumer1:
    build:
      context: ./consumer1
      dockerfile: ../Dockerfile
    volumes:
      - './consumer1/:/usr/src/app'
    environment: 
      - PORT=3001
      - EXCHANGE=kwetter
      - QNAME=consumer1
      - MONGO_URL=mongodb://root:root@mongo1:27017/data?authSource=admin
    ports:
      - 3001:3001
    depends_on:
      - rabbitmq
    restart: always

  mongo1:
    image: mongo:latest
    container_name: mongo1
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=data
    volumes:
      - 'mongo1:/data/db'

  consumer2:
    build:
      context: ./consumer2
      dockerfile: ../Dockerfile
    volumes:
      - './consumer2/:/usr/src/app'
    environment: 
      - PORT=3002
      - EXCHANGE=kwetter
      - QNAME=consumer2
      - MONGO_URL=mongodb://root:root@mongo2:27017/data?authSource=admin
    ports:
      - 3002:3002
    depends_on:
      - rabbitmq
    restart: always

  mongo2:
    image: mongo:latest
    container_name: mongo2
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=data
    volumes:
      - 'mongo2:/data/db'

volumes:
  mongo1:
  mongo2:
